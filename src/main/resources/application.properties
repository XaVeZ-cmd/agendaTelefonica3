# ===============================
# = DATA SOURCE - LOCAL
# ===============================
# Set here configurations for the database connection
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://autorack.proxy.rlwy.net:21986/railway
# spring.datasource.url=jdbc:postgres://gqqZTNqUPEcEeoHLtqgRzZrPXgikvqQb@autorack.proxy.rlwy.net:21986/railway
spring.datasource.username=postgres
spring.datasource.password=gqqZTNqUPEcEeoHLtqgRzZrPXgikvqQb
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update

# # ===============================
# # = DATA SOURCE - LOCAL
# # ===============================
# # Set here configurations for the database connection
# spring.datasource.url=jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/
# spring.datasource.username=${DATABASE_USER:thiago}
# spring.datasource.password=${DATABASE_PASSWORD:123456}
# spring.datasource.driver-class-name=org.postgresql.Driver
# # Keep the connection alive if idle for a long time (needed in production)
# spring.datasource.testWhileIdle=true
# spring.datasource.validationQuery=SELECT 1
# # ===============================
# # = JPA / HIBERNATE
# # ===============================
# # Show or not log for each sql query
# spring.jpa.show-sql=true
# # Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# # schema will be automatically created afresh for every start of application
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect